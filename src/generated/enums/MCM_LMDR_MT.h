/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM4
{

enum class MCM_LMDR_MT : uint8_t
{
    _0 /*!< code TCM */,
    _1 = 1 /*!< system TCM */,
    _2 = 2 /*!< PC Cache */,
    _3 = 3 /*!< PS Cache */
};
static_assert(sizeof(MCM_LMDR_MT) == 1);

/**
 * Converts MCM_LMDR_MT to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(MCM_LMDR_MT instance)
{
    const char *result = "UNKNOWN MCM_LMDR_MT";

    switch (instance)
    {
    case MCM_LMDR_MT::_0:
        result = "_0";
        break;
    case MCM_LMDR_MT::_1:
        result = "_1";
        break;
    case MCM_LMDR_MT::_2:
        result = "_2";
        break;
    case MCM_LMDR_MT::_3:
        result = "_3";
        break;
    }

    return result;
}

/**
 * Converts a C string to MCM_LMDR_MT.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, MCM_LMDR_MT &output)
{
    bool result = false;

    if ((result = !strncmp(data, "_0", 2)))
    {
        output = MCM_LMDR_MT::_0;
    }
    else if ((result = !strncmp(data, "_1", 2)))
    {
        output = MCM_LMDR_MT::_1;
    }
    else if ((result = !strncmp(data, "_2", 2)))
    {
        output = MCM_LMDR_MT::_2;
    }
    else if ((result = !strncmp(data, "_3", 2)))
    {
        output = MCM_LMDR_MT::_3;
    }

    return result;
}

}; // namespace MIMXRT1176::CM4
