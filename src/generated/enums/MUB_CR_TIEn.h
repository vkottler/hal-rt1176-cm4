/**
 * \file
 * \brief Generated by ifgen (3.3.0).
 */
#pragma once

#include <cstdint>
#include <cstring>

namespace MIMXRT1176::CM4
{

enum class MUB_CR_TIEn : uint8_t
{
    disable /*!< Disables Processor B Transmit Interrupt n. (default) */,
    enable = 1 /*!< Enables Processor B Transmit Interrupt n. */
};
static_assert(sizeof(MUB_CR_TIEn) == 1);

/**
 * Converts MUB_CR_TIEn to a C string.
 *
 * \param[in] instance Value to convert.
 * \return             A C string representation of the value.
 */
inline const char *to_string(MUB_CR_TIEn instance)
{
    const char *result = "UNKNOWN MUB_CR_TIEn";

    switch (instance)
    {
    case MUB_CR_TIEn::disable:
        result = "disable";
        break;
    case MUB_CR_TIEn::enable:
        result = "enable";
        break;
    }

    return result;
}

/**
 * Converts a C string to MUB_CR_TIEn.
 *
 * \param[in]  data   A C string to convert.
 * \param[out] output The enumeration element to write.
 * \return            Whether or not the output was written.
 */
inline bool from_string(const char *data, MUB_CR_TIEn &output)
{
    bool result = false;

    if ((result = !strncmp(data, "disable", 7)))
    {
        output = MUB_CR_TIEn::disable;
    }
    else if ((result = !strncmp(data, "enable", 6)))
    {
        output = MUB_CR_TIEn::enable;
    }

    return result;
}

}; // namespace MIMXRT1176::CM4
